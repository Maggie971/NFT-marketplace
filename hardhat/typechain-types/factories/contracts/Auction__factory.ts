/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Auction, AuctionInterface } from "../../contracts/Auction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startingBid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AuctionEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NewBid",
    type: "event",
  },
  {
    inputs: [],
    name: "auctionEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionEnded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "highestBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "highestBidder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "placeBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "seller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d2438038062000d2483398181016040528101906200003791906200012d565b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260018190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816003819055508042620000d4919062000199565b6005819055506000600660006101000a81548160ff0219169083151502179055505050505062000297565b600081519050620001108162000263565b92915050565b60008151905062000127816200027d565b92915050565b600080600080608085870312156200014457600080fd5b60006200015487828801620000ff565b9450506020620001678782880162000116565b93505060406200017a8782880162000116565b92505060606200018d8782880162000116565b91505092959194509250565b6000620001a6826200022a565b9150620001b3836200022a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620001eb57620001ea62000234565b5b828201905092915050565b600062000203826200020a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6200026e81620001f6565b81146200027a57600080fd5b50565b62000288816200022a565b81146200029457600080fd5b50565b610a7d80620002a76000396000f3fe6080604052600436106100865760003560e01c806391f901571161005957806391f9015714610137578063d56d229d14610162578063d57bde791461018d578063ecfc7ecc146101b8578063fe67a54b146101c257610086565b806308551a531461008b5780634b449cba146100b65780637e830574146100e1578063864333741461010c575b600080fd5b34801561009757600080fd5b506100a06101d9565b6040516100ad91906107aa565b60405180910390f35b3480156100c257600080fd5b506100cb6101ff565b6040516100d891906108e0565b60405180910390f35b3480156100ed57600080fd5b506100f6610205565b60405161010391906108e0565b60405180910390f35b34801561011857600080fd5b5061012161020b565b60405161012e9190610825565b60405180910390f35b34801561014357600080fd5b5061014c61021e565b60405161015991906107aa565b60405180910390f35b34801561016e57600080fd5b50610177610244565b60405161018491906107aa565b60405180910390f35b34801561019957600080fd5b506101a2610268565b6040516101af91906108e0565b60405180910390f35b6101c061026e565b005b3480156101ce57600080fd5b506101d76103ef565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60015481565b600660009054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60055442106102b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a990610880565b60405180910390fd5b60035434116102f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ed906108a0565b60405180910390fd5b60006003541461036c57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f1935050505015801561036a573d6000803e3d6000fd5b505b3460038190555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fdd0b6c6a77960e2066c96171b4d7ac9e8b4c184011f38544afa36a5bb63ec59f33346040516103e59291906107fc565b60405180910390a1565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461047f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610476906108c0565b60405180910390fd5b6005544210156104c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bb90610860565b60405180910390fd5b600660009054906101000a900460ff1615610514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050b90610840565b60405180910390fd5b6001600660006101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001546040518463ffffffff1660e01b81526004016105d2939291906107c5565b600060405180830381600087803b1580156105ec57600080fd5b505af1158015610600573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f1935050505015801561066e573d6000803e3d6000fd5b507fdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003546040516106c49291906107fc565b60405180910390a1565b6106d78161090c565b82525050565b6106e68161091e565b82525050565b60006106f96015836108fb565b915061070482610954565b602082019050919050565b600061071c6018836108fb565b91506107278261097d565b602082019050919050565b600061073f6011836108fb565b915061074a826109a6565b602082019050919050565b6000610762602f836108fb565b915061076d826109cf565b604082019050919050565b60006107856019836108fb565b915061079082610a1e565b602082019050919050565b6107a48161094a565b82525050565b60006020820190506107bf60008301846106ce565b92915050565b60006060820190506107da60008301866106ce565b6107e760208301856106ce565b6107f4604083018461079b565b949350505050565b600060408201905061081160008301856106ce565b61081e602083018461079b565b9392505050565b600060208201905061083a60008301846106dd565b92915050565b60006020820190508181036000830152610859816106ec565b9050919050565b600060208201905081810360008301526108798161070f565b9050919050565b6000602082019050818103600083015261089981610732565b9050919050565b600060208201905081810360008301526108b981610755565b9050919050565b600060208201905081810360008301526108d981610778565b9050919050565b60006020820190506108f5600083018461079b565b92915050565b600082825260208201905092915050565b60006109178261092a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f41756374696f6e20616c726561647920656e6465640000000000000000000000600082015250565b7f41756374696f6e206973207374696c6c206f6e676f696e670000000000000000600082015250565b7f41756374696f6e2068617320656e646564000000000000000000000000000000600082015250565b7f426964206d75737420626520686967686572207468616e20746865206375727260008201527f656e742068696768657374206269640000000000000000000000000000000000602082015250565b7f4f6e6c792073656c6c65722063616e2063616c6c20746869730000000000000060008201525056fea26469706673582212209621daded6869e22284f88796313c0395db9e7e577bf6668a206e85fe41500a964736f6c63430008040033";

type AuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Auction__factory extends ContractFactory {
  constructor(...args: AuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _nftContract: AddressLike,
    _nftTokenId: BigNumberish,
    _startingBid: BigNumberish,
    _duration: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _nftContract,
      _nftTokenId,
      _startingBid,
      _duration,
      overrides || {}
    );
  }
  override deploy(
    _nftContract: AddressLike,
    _nftTokenId: BigNumberish,
    _startingBid: BigNumberish,
    _duration: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _nftContract,
      _nftTokenId,
      _startingBid,
      _duration,
      overrides || {}
    ) as Promise<
      Auction & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Auction__factory {
    return super.connect(runner) as Auction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuctionInterface {
    return new Interface(_abi) as AuctionInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Auction {
    return new Contract(address, _abi, runner) as unknown as Auction;
  }
}
